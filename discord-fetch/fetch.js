const fs = require('fs');
const { Client, GatewayIntentBits, Partials } = require('discord.js');

const token = process.env.DISCORD_TOKEN;
const guildId = process.env.GUILD_ID;
const announceChannelId = process.env.ANNOUNCE_CHANNEL_ID;
const activityChannelId = process.env.ACTIVITY_CHANNEL_ID;

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildPresences,
    GatewayIntentBits.GuildMembers,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.GuildVoiceStates,
    GatewayIntentBits.MessageContent
  ],
  partials: [Partials.Channel]
});

async function gather() {
  try {
    await client.login(token);
    console.log('‚úÖ –ë–æ—Ç –≤–æ—à—ë–ª –≤ Discord');

    const guild = await client.guilds.fetch(guildId);
    await guild.members.fetch({ withPresences: true });
    console.log(`üåê –°–µ—Ä–≤–µ—Ä: ${guild.name}`);

    const totalMembers = guild.memberCount;
    const onlineCount = guild.members.cache.filter(m => ['online','idle','dnd'].includes(m.presence?.status)).size;
    const voiceCount = guild.voiceStates.cache.size;

    // --- –°–æ–æ–±—â–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π ---
    let messages = [];
    if (announceChannelId) {
      try {
        console.log('üîî –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–Ω–∞–ª–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π:', announceChannelId);
        const channel = await client.channels.fetch(announceChannelId);
        console.log('–ö–∞–Ω–∞–ª –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞–π–¥–µ–Ω:', channel.name);

        if (channel.isTextBased()) {
          const fetched = await channel.messages.fetch({ limit: 5 });
          console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏:', fetched.size);

          messages = fetched.map(m => ({
            author: m.author.username,
            avatar: m.author.displayAvatarURL(),
            content: m.content,
            time: m.createdAt.toISOString(),
            attachments: Array.from(m.attachments.values()).map(a => ({
              url: a.url,
              contentType: a.contentType
            }))
          }));
        }
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–±—ä—è–≤–ª–µ–Ω–∏–π:', err.message);
      }
    } else {
      console.warn('‚ö†Ô∏è ANNOUNCE_CHANNEL_ID –Ω–µ –∑–∞–¥–∞–Ω');
    }

    // --- –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ---
    let activityMessage = null;
    let activityStatus = '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö';
    if (activityChannelId) {
      try {
        console.log('üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–Ω–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', activityChannelId);
        const activityChannel = await client.channels.fetch(activityChannelId);
        console.log('–ö–∞–Ω–∞–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω:', activityChannel.name);

        if (activityChannel.isTextBased()) {
          const lastMsg = await activityChannel.messages.fetch({ limit: 1 });
          console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', lastMsg.size);

          const msg = lastMsg.first();
          console.log('–û–±—ä–µ–∫—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', msg);

          if (msg) {
            activityMessage = msg.content || null;
            activityStatus = msg.content ? msg.content : '–°–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞';
            console.log('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', activityMessage);
          } else {
            activityStatus = '–í –∫–∞–Ω–∞–ª–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∏–ª–∏ –±–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞';
            console.log('‚ö†Ô∏è', activityStatus);
          }
        }
      } catch (err) {
        activityStatus = '–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏';
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', err.message);
      }
    } else {
      console.warn('‚ö†Ô∏è ACTIVITY_CHANNEL_ID –Ω–µ –∑–∞–¥–∞–Ω');
      activityStatus = 'ACTIVITY_CHANNEL_ID –Ω–µ –∑–∞–¥–∞–Ω';
    }

    // --- –°–±–æ—Ä –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö ---
    const out = {
      updated_at: new Date().toISOString(),
      totalMembers,
      onlineCount,
      voiceCount,
      messages,
      activityMessage,
      activityStatus
    };

    fs.writeFileSync('../data.json', JSON.stringify(out, null, 2));
    console.log('‚úÖ data.json –æ–±–Ω–æ–≤–ª—ë–Ω');

    await client.destroy();
    process.exit(0);

  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –≤ gather():', err);
    process.exit(1);
  }
}

gather();
